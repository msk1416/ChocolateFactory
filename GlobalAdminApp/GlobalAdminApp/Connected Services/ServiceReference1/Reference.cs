//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.27428.2027
// 
namespace GlobalAdminApp.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductStockDTO", Namespace="http://schemas.datacontract.org/2004/07/HQService")]
    public partial class ProductStockDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ProductIDField;
        
        private string ProductNameField;
        
        private string ProductTypeField;
        
        private int quantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PendingStockOrderDTO", Namespace="http://schemas.datacontract.org/2004/07/HQService")]
    public partial class PendingStockOrderDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int OrderIDField;
        
        private int ProductIDField;
        
        private int QuantityAskedField;
        
        private string branchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityAsked {
            get {
                return this.QuantityAskedField;
            }
            set {
                if ((this.QuantityAskedField.Equals(value) != true)) {
                    this.QuantityAskedField = value;
                    this.RaisePropertyChanged("QuantityAsked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string branch {
            get {
                return this.branchField;
            }
            set {
                if ((object.ReferenceEquals(this.branchField, value) != true)) {
                    this.branchField = value;
                    this.RaisePropertyChanged("branch");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BranchDTO", Namespace="http://schemas.datacontract.org/2004/07/HQService")]
    public partial class BranchDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string locationField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdersLogDTO", Namespace="http://schemas.datacontract.org/2004/07/HQService")]
    public partial class OrdersLogDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short AcceptedField;
        
        private System.DateTime DateField;
        
        private int LocalClientIDField;
        
        private int LocalShipperIDField;
        
        private int OrderIDField;
        
        private int ProductIDField;
        
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Accepted {
            get {
                return this.AcceptedField;
            }
            set {
                if ((this.AcceptedField.Equals(value) != true)) {
                    this.AcceptedField = value;
                    this.RaisePropertyChanged("Accepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocalClientID {
            get {
                return this.LocalClientIDField;
            }
            set {
                if ((this.LocalClientIDField.Equals(value) != true)) {
                    this.LocalClientIDField = value;
                    this.RaisePropertyChanged("LocalClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocalShipperID {
            get {
                return this.LocalShipperIDField;
            }
            set {
                if ((this.LocalShipperIDField.Equals(value) != true)) {
                    this.LocalShipperIDField = value;
                    this.RaisePropertyChanged("LocalShipperID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockOrderLogDTO", Namespace="http://schemas.datacontract.org/2004/07/HQService")]
    public partial class StockOrderLogDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int OrderIdField;
        
        private int ProductIDField;
        
        private int QuantityField;
        
        private string branchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string branch {
            get {
                return this.branchField;
            }
            set {
                if ((object.ReferenceEquals(this.branchField, value) != true)) {
                    this.branchField = value;
                    this.RaisePropertyChanged("branch");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IHQService")]
    public interface IHQService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/requestStockHQ", ReplyAction="http://tempuri.org/IHQService/requestStockHQResponse")]
        System.Threading.Tasks.Task<int> requestStockHQAsync(int proposedOrderId, string branch, int productId, int quantityAsked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/acceptStockRequest", ReplyAction="http://tempuri.org/IHQService/acceptStockRequestResponse")]
        System.Threading.Tasks.Task<int> acceptStockRequestAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/logLocalOrder", ReplyAction="http://tempuri.org/IHQService/logLocalOrderResponse")]
        System.Threading.Tasks.Task<bool> logLocalOrderAsync(int orderId, int localClientId, int productId, string date, int quantity, int localShipperId, bool isAccepted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/dismissStockOrder", ReplyAction="http://tempuri.org/IHQService/dismissStockOrderResponse")]
        System.Threading.Tasks.Task<bool> dismissStockOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/getProductStocks", ReplyAction="http://tempuri.org/IHQService/getProductStocksResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.ProductStockDTO>> getProductStocksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/getPendingStockOrders", ReplyAction="http://tempuri.org/IHQService/getPendingStockOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.PendingStockOrderDTO>> getPendingStockOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/getBranches", ReplyAction="http://tempuri.org/IHQService/getBranchesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.BranchDTO>> getBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/getOrdersLogs", ReplyAction="http://tempuri.org/IHQService/getOrdersLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.OrdersLogDTO>> getOrdersLogsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHQService/getStockOrderLogs", ReplyAction="http://tempuri.org/IHQService/getStockOrderLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.StockOrderLogDTO>> getStockOrderLogsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHQServiceChannel : GlobalAdminApp.ServiceReference1.IHQService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HQServiceClient : System.ServiceModel.ClientBase<GlobalAdminApp.ServiceReference1.IHQService>, GlobalAdminApp.ServiceReference1.IHQService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HQServiceClient() : 
                base(HQServiceClient.GetDefaultBinding(), HQServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IHQService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HQServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(HQServiceClient.GetBindingForEndpoint(endpointConfiguration), HQServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HQServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HQServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HQServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HQServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HQServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<int> requestStockHQAsync(int proposedOrderId, string branch, int productId, int quantityAsked) {
            return base.Channel.requestStockHQAsync(proposedOrderId, branch, productId, quantityAsked);
        }
        
        public System.Threading.Tasks.Task<int> acceptStockRequestAsync(int orderId) {
            return base.Channel.acceptStockRequestAsync(orderId);
        }
        
        public System.Threading.Tasks.Task<bool> logLocalOrderAsync(int orderId, int localClientId, int productId, string date, int quantity, int localShipperId, bool isAccepted) {
            return base.Channel.logLocalOrderAsync(orderId, localClientId, productId, date, quantity, localShipperId, isAccepted);
        }
        
        public System.Threading.Tasks.Task<bool> dismissStockOrderAsync(int orderId) {
            return base.Channel.dismissStockOrderAsync(orderId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.ProductStockDTO>> getProductStocksAsync() {
            return base.Channel.getProductStocksAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.PendingStockOrderDTO>> getPendingStockOrdersAsync() {
            return base.Channel.getPendingStockOrdersAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.BranchDTO>> getBranchesAsync() {
            return base.Channel.getBranchesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.OrdersLogDTO>> getOrdersLogsAsync() {
            return base.Channel.getOrdersLogsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<GlobalAdminApp.ServiceReference1.StockOrderLogDTO>> getStockOrderLogsAsync() {
            return base.Channel.getStockOrderLogsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHQService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHQService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/HQService/HQServiceClass/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return HQServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IHQService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return HQServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IHQService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IHQService,
        }
    }
}
