//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestProductService.PSReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDTO", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class OrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JustificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipperIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Accepted {
            get {
                return this.AcceptedField;
            }
            set {
                if ((this.AcceptedField.Equals(value) != true)) {
                    this.AcceptedField = value;
                    this.RaisePropertyChanged("Accepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Justification {
            get {
                return this.JustificationField;
            }
            set {
                if ((object.ReferenceEquals(this.JustificationField, value) != true)) {
                    this.JustificationField = value;
                    this.RaisePropertyChanged("Justification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipperID {
            get {
                return this.ShipperIDField;
            }
            set {
                if ((this.ShipperIDField.Equals(value) != true)) {
                    this.ShipperIDField = value;
                    this.RaisePropertyChanged("ShipperID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PendingOrderDTO", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class PendingOrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipperIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipperID {
            get {
                return this.ShipperIDField;
            }
            set {
                if ((this.ShipperIDField.Equals(value) != true)) {
                    this.ShipperIDField = value;
                    this.RaisePropertyChanged("ShipperID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientDTO", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class ClientDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferedFormatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferedFormat {
            get {
                return this.PreferedFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferedFormatField, value) != true)) {
                    this.PreferedFormatField = value;
                    this.RaisePropertyChanged("PreferedFormat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Quantity_UKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity_UK {
            get {
                return this.Quantity_UKField;
            }
            set {
                if ((this.Quantity_UKField.Equals(value) != true)) {
                    this.Quantity_UKField = value;
                    this.RaisePropertyChanged("Quantity_UK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipperDTO", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class ShipperDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostPerTonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipperIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostPerTon {
            get {
                return this.CostPerTonField;
            }
            set {
                if ((this.CostPerTonField.Equals(value) != true)) {
                    this.CostPerTonField = value;
                    this.RaisePropertyChanged("CostPerTon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipperID {
            get {
                return this.ShipperIDField;
            }
            set {
                if ((this.ShipperIDField.Equals(value) != true)) {
                    this.ShipperIDField = value;
                    this.RaisePropertyChanged("ShipperID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PSReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/requestOrder", ReplyAction="http://tempuri.org/IProductService/requestOrderResponse")]
        int requestOrder(int clientId, int productId, int quantity, string date, int shipperId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/requestOrder", ReplyAction="http://tempuri.org/IProductService/requestOrderResponse")]
        System.Threading.Tasks.Task<int> requestOrderAsync(int clientId, int productId, int quantity, string date, int shipperId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/acceptOrder", ReplyAction="http://tempuri.org/IProductService/acceptOrderResponse")]
        bool acceptOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/acceptOrder", ReplyAction="http://tempuri.org/IProductService/acceptOrderResponse")]
        System.Threading.Tasks.Task<bool> acceptOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/dismissOrder", ReplyAction="http://tempuri.org/IProductService/dismissOrderResponse")]
        bool dismissOrder(int orderId, string justification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/dismissOrder", ReplyAction="http://tempuri.org/IProductService/dismissOrderResponse")]
        System.Threading.Tasks.Task<bool> dismissOrderAsync(int orderId, string justification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/deliverStock", ReplyAction="http://tempuri.org/IProductService/deliverStockResponse")]
        bool deliverStock(int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/deliverStock", ReplyAction="http://tempuri.org/IProductService/deliverStockResponse")]
        System.Threading.Tasks.Task<bool> deliverStockAsync(int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/requestStockToHQ", ReplyAction="http://tempuri.org/IProductService/requestStockToHQResponse")]
        int requestStockToHQ(int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/requestStockToHQ", ReplyAction="http://tempuri.org/IProductService/requestStockToHQResponse")]
        System.Threading.Tasks.Task<int> requestStockToHQAsync(int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getOrders", ReplyAction="http://tempuri.org/IProductService/getOrdersResponse")]
        UnitTestProductService.PSReference.OrderDTO[] getOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getOrders", ReplyAction="http://tempuri.org/IProductService/getOrdersResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.OrderDTO[]> getOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getPendingOrders", ReplyAction="http://tempuri.org/IProductService/getPendingOrdersResponse")]
        UnitTestProductService.PSReference.PendingOrderDTO[] getPendingOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getPendingOrders", ReplyAction="http://tempuri.org/IProductService/getPendingOrdersResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.PendingOrderDTO[]> getPendingOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getOrdersByClient", ReplyAction="http://tempuri.org/IProductService/getOrdersByClientResponse")]
        UnitTestProductService.PSReference.OrderDTO[] getOrdersByClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getOrdersByClient", ReplyAction="http://tempuri.org/IProductService/getOrdersByClientResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.OrderDTO[]> getOrdersByClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getPendingOrdersByClient", ReplyAction="http://tempuri.org/IProductService/getPendingOrdersByClientResponse")]
        UnitTestProductService.PSReference.PendingOrderDTO[] getPendingOrdersByClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getPendingOrdersByClient", ReplyAction="http://tempuri.org/IProductService/getPendingOrdersByClientResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.PendingOrderDTO[]> getPendingOrdersByClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getClients", ReplyAction="http://tempuri.org/IProductService/getClientsResponse")]
        UnitTestProductService.PSReference.ClientDTO[] getClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getClients", ReplyAction="http://tempuri.org/IProductService/getClientsResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.ClientDTO[]> getClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getProducts", ReplyAction="http://tempuri.org/IProductService/getProductsResponse")]
        UnitTestProductService.PSReference.ProductDTO[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getProducts", ReplyAction="http://tempuri.org/IProductService/getProductsResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.ProductDTO[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getShippers", ReplyAction="http://tempuri.org/IProductService/getShippersResponse")]
        UnitTestProductService.PSReference.ShipperDTO[] getShippers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/getShippers", ReplyAction="http://tempuri.org/IProductService/getShippersResponse")]
        System.Threading.Tasks.Task<UnitTestProductService.PSReference.ShipperDTO[]> getShippersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : UnitTestProductService.PSReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<UnitTestProductService.PSReference.IProductService>, UnitTestProductService.PSReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int requestOrder(int clientId, int productId, int quantity, string date, int shipperId) {
            return base.Channel.requestOrder(clientId, productId, quantity, date, shipperId);
        }
        
        public System.Threading.Tasks.Task<int> requestOrderAsync(int clientId, int productId, int quantity, string date, int shipperId) {
            return base.Channel.requestOrderAsync(clientId, productId, quantity, date, shipperId);
        }
        
        public bool acceptOrder(int orderId) {
            return base.Channel.acceptOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<bool> acceptOrderAsync(int orderId) {
            return base.Channel.acceptOrderAsync(orderId);
        }
        
        public bool dismissOrder(int orderId, string justification) {
            return base.Channel.dismissOrder(orderId, justification);
        }
        
        public System.Threading.Tasks.Task<bool> dismissOrderAsync(int orderId, string justification) {
            return base.Channel.dismissOrderAsync(orderId, justification);
        }
        
        public bool deliverStock(int productId, int quantity) {
            return base.Channel.deliverStock(productId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> deliverStockAsync(int productId, int quantity) {
            return base.Channel.deliverStockAsync(productId, quantity);
        }
        
        public int requestStockToHQ(int productId, int quantity) {
            return base.Channel.requestStockToHQ(productId, quantity);
        }
        
        public System.Threading.Tasks.Task<int> requestStockToHQAsync(int productId, int quantity) {
            return base.Channel.requestStockToHQAsync(productId, quantity);
        }
        
        public UnitTestProductService.PSReference.OrderDTO[] getOrders() {
            return base.Channel.getOrders();
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.OrderDTO[]> getOrdersAsync() {
            return base.Channel.getOrdersAsync();
        }
        
        public UnitTestProductService.PSReference.PendingOrderDTO[] getPendingOrders() {
            return base.Channel.getPendingOrders();
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.PendingOrderDTO[]> getPendingOrdersAsync() {
            return base.Channel.getPendingOrdersAsync();
        }
        
        public UnitTestProductService.PSReference.OrderDTO[] getOrdersByClient(int clientId) {
            return base.Channel.getOrdersByClient(clientId);
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.OrderDTO[]> getOrdersByClientAsync(int clientId) {
            return base.Channel.getOrdersByClientAsync(clientId);
        }
        
        public UnitTestProductService.PSReference.PendingOrderDTO[] getPendingOrdersByClient(int clientId) {
            return base.Channel.getPendingOrdersByClient(clientId);
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.PendingOrderDTO[]> getPendingOrdersByClientAsync(int clientId) {
            return base.Channel.getPendingOrdersByClientAsync(clientId);
        }
        
        public UnitTestProductService.PSReference.ClientDTO[] getClients() {
            return base.Channel.getClients();
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.ClientDTO[]> getClientsAsync() {
            return base.Channel.getClientsAsync();
        }
        
        public UnitTestProductService.PSReference.ProductDTO[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.ProductDTO[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public UnitTestProductService.PSReference.ShipperDTO[] getShippers() {
            return base.Channel.getShippers();
        }
        
        public System.Threading.Tasks.Task<UnitTestProductService.PSReference.ShipperDTO[]> getShippersAsync() {
            return base.Channel.getShippersAsync();
        }
    }
}
